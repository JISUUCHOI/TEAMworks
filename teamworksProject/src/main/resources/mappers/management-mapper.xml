<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="managementMapper">

	<resultMap id="jobResultSet" type="MgJob">
		<id column="job_code" property="jobCode" />
		<result column="job_name" property="jobName" />
	</resultMap>

	<resultMap id="deptResultSet" type="MgDept">
		<id column="dept_code" property="deptCode" />
		<result column="dept_name" property="deptName" />
	</resultMap>

	<resultMap id="empVacationResultSet" type="MgVac">
		<id column="emp_id" property="empId" />
		<result column="vacation_year" property="vcYear" />
		<result column="emp_name" property="empName"/>
		<result column="hire_date" property="hireDate"/>
		<result column="vacation_total" property="vcTotal" />
		<result column="vacation_count" property="vcCount" />
		<result column="typea" property="typeA"/>
		<result column="typeb" property="typeB"/>
		<result column="typec" property="typeC"/>
		<result column="typed" property="typeD"/>
		<result column="months" property="months"/>
	</resultMap>

	<resultMap id="companyBsnsResultSet" type="MgBsns">
		<id column="company_no" property="companyNo" />
		<result column="hom_no" property="homNo" />
		<result column="company_name" property="companyName" />
		<result column="company_head" property="companyHead" />
		<result column="company_con" property="companyCon" />
		<result column="company_kind" property="companyKind" />
		<result column="company_adrs" property="companyAdrs" />
		<result column="company_exno" property="companyExno" />
		<result column="seal_origin_name" property="sealOrigin"/>
		<result column="seal_change_name" property="sealChange"/>
	</resultMap>

	<resultMap id="companyInfoResultSet" type="MgInfo">
		<id column="hom_no" property="homNo" />
		<result column="hom_name" property="homName" />
		<result column="hom_head" property="homHead" />
		<result column="hom_adrs" property="homAdrs" />
		<result column="emp_id" property="empId" />
		<result column="logo_origin_name" property="logoOrigin" />
		<result column="logo_change_name" property="logoChange" />
	</resultMap>

	<resultMap id="empProofResultSet" type="MgProof">
		<id column="doc_no" property="docNo" />
		<result column="pf_sq" property="pfSq" />
		<result column="pf_purpose" property="pfPurpose" />
		<result column="doc_status" property="docStatus" />
		<result column="emp_id" property="empId"/>
		<result column="emp_name" property="empName"/>
		<result column="doc_date" property="docDate"/>
		<result column="pf_status" property="pfStatus"/>
		<result column="doc_department" property="empDept"/>
	</resultMap>

	<resultMap id="employeeResultSet" type="Employee">
		<id column="emp_Id" property="empId"/>
		<result column="dept_code" property="deptCode"/>
		<result column="job_code" property="jobCode"/>
		<result column="emp_name" property="empName"/>
		<result column="emp_pwd" property="empPwd"/>
		<result column="emp_no" property="empNo"/>
		<result column="emp_phone" property="phone"/>
		<result column="emp_email" property="email"/>
		<result column="postcode" property="postcode"/>
		<result column="address" property="empAdd"/>
		<result column="address_dt" property="empAddDetail"/>
		<result column="hire_date" property="hireDate"/>
		<result column="retire_date" property="retireDate"/>
		<result column="sal_type" property="salType"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="emp_status" property="status"/>
		<result column="emp_note" property="empNote"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="hom_no" property="homNo"/>
		<result column="dept_name" property="deptName"/>
		<result column="job_name" property="jobName"/>
	</resultMap>

 	<select id="selectJobList" resultMap="jobResultSet">
		SELECT *
		  FROM JOB
	  ORDER BY JOB_CODE
	</select>
	
	<select id="selectCompanyInfo" resultMap="companyInfoResultSet">
		SELECT *
		  FROM COMPANY_INFO
		 WHERE HOM_NO=#{homNo}
	</select>
	
	<select id="selectCompanyBsns" resultMap="companyBsnsResultSet">
		SELECT *
		  FROM COMPANY_BSNS
		 WHERE HOM_NO=#{homNo}
	</select>

	<insert id="insertEmployee" parameterType="Employee">
		INSERT INTO EMPLOYEE
		VALUES(#{empId}, #{deptCode}, #{jobCode}, #{empName}, #{empPwd}, #{empNo}, #{phone}, #{email}, #{postcode}, #{empAdd}, 
			   #{empAddDetail}, #{hireDate}, #{retireDate}, #{salType}, sysdate, 'Y', #{empNote}, #{originName}, #{changeName}, #{homNo})
	</insert>
	
	<select id="empIdCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM EMPLOYEE
		 WHERE EMP_ID=#{empId}
	</select>
	
	<select id="selectEmpCount" resultType="_int">
		SELECT COUNT(*)
		  FROM EMPLOYEE
		 WHERE EMP_STATUS = 'Y'
	</select>	
	
	<select id="selectEmpList" resultMap="employeeResultSet">
        SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_NAME, JOB_NAME, HIRE_DATE, EMP_EMAIL, EMP_PHONE
		  FROM EMPLOYEE E
          JOIN JOB USING(JOB_CODE)
          JOIN DEPARTMENT USING(DEPT_CODE)
		 WHERE EMP_STATUS = 'Y'
	</select>
	
	<select id="selectOrgEmpList" parameterType="_int" resultMap="employeeResultSet">
	    SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_NAME, JOB_NAME, HIRE_DATE, EMP_EMAIL, EMP_PHONE 
		  FROM EMPLOYEE E, JOB J, DEPARTMENT D
		 WHERE J.JOB_CODE = E.JOB_CODE AND D.DEPT_CODE = E.DEPT_CODE
		   AND E.DEPT_CODE = #{deptCode}
	</select>
	
	<select id="selectSearchEmpList" parameterType="string" resultMap="employeeResultSet">
		SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_NAME, JOB_NAME, HIRE_DATE, EMP_EMAIL, EMP_PHONE
		  FROM EMPLOYEE E, JOB J, DEPARTMENT D
		 WHERE J.JOB_CODE = E.JOB_CODE AND D.DEPT_CODE = E.DEPT_CODE
               AND EMP_NAME LIKE #{keyword}
	</select>
	
	<select id="selectEmpKeywordCount" resultType="_int">
		SELECT COUNT(*)
		  FROM EMPLOYEE E, JOB J, DEPARTMENT D
		 WHERE J.JOB_CODE = E.JOB_CODE AND D.DEPT_CODE = E.DEPT_CODE
		 	<if test="empId != null">
       			AND EMP_ID LIKE '%'||#{empId}||'%'
       		</if>
			<if test="empName != null">
				AND EMP_NAME LIKE '%'||#{empName}||'%'
			</if>
			<if test="deptName != null">
				AND DEPT_NAME LIKE '%'||#{deptName}||'%'
			</if>
	</select>		
	
	<select id="selectEmpListKeyword" resultMap="employeeResultSet">
		SELECT EMP_ID, EMP_NAME, EMP_NO, DEPT_NAME, JOB_NAME, HIRE_DATE, EMP_EMAIL 
		  FROM EMPLOYEE E, JOB J, DEPARTMENT D
		 WHERE J.JOB_CODE = E.JOB_CODE AND D.DEPT_CODE = E.DEPT_CODE
		 	<if test="empId != null">
       			AND EMP_ID LIKE '%'||#{empId}||'%'
       		</if>
			<if test="empName != null">
				AND EMP_NAME LIKE '%'||#{empName}||'%'
			</if>
			<if test="deptName != null">
				AND DEPT_NAME LIKE '%'||#{deptName}||'%'
			</if>
	</select>
	
	<select id="selectDeptList" resultMap="deptResultSet">
		SELECT *
		  FROM DEPARTMENT
		 ORDER BY DEPT_CODE
	</select>
	
	<insert id="insertDept" parameterType="string">
		INSERT INTO DEPARTMENT
		VALUES(SEQ_DEPTNO.NEXTVAL, #{deptName})
	</insert>
	
	<update id="updateDept" parameterType="MgDept">
		UPDATE DEPARTMENT
		   SET DEPT_NAME=#{deptName}
		 WHERE DEPT_CODE=#{deptCode}
	</update>
	
	<delete id="deleteDept" parameterType="_int">
		DELETE FROM DEPARTMENT
		 WHERE DEPT_CODE=#{deptCode}
	</delete>
	
	<select id="selectVacList" resultMap="empVacationResultSet">
		SELECT E.EMP_ID, EMP_NAME, VACATION_COUNT,TYPEA, TYPEB,TYPEC,TYPED, HIRE_DATE, ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) MONTHS  
		       FROM EMPLOYEE E 
		       LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS VACATION_COUNT FROM VACATION WHERE DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEA FROM VACATION WHERE VC_SQ = '경조사' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEB FROM VACATION WHERE VC_SQ = '병가' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID) 
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEC FROM VACATION WHERE VC_SQ = '출산' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPED FROM VACATION WHERE VC_SQ = '연차' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
		       ORDER BY EMP_ID
	</select>
	
	
	<select id="selectVacListKeyword" resultMap="empVacationResultSet">
		SELECT E.EMP_ID, EMP_NAME, VACATION_COUNT,TYPEA, TYPEB,TYPEC,TYPED, HIRE_DATE, ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) MONTHS  
		       FROM EMPLOYEE E 
		       LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS VACATION_COUNT FROM VACATION WHERE DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEA FROM VACATION WHERE VC_SQ = '경조사' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEB FROM VACATION WHERE VC_SQ = '병가' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID) 
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEC FROM VACATION WHERE VC_SQ = '출산' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
               LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPED FROM VACATION WHERE VC_SQ = '연차' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
				<if test="empName != null">
					WHERE EMP_NAME LIKE '%'||#{empName}||'%'
				</if>
				<if test="vacationYear != null">
					WHERE vacationYear LIKE '%'||#{vacationYear}||'%'
				</if>
				ORDER BY EMP_ID
	</select>
	
	<select id="selectVacCount" resultType="_int">
		SELECT COUNT(*)
		  FROM (SELECT E.EMP_ID, EMP_NAME, VACATION_COUNT,TYPEA, TYPEB,TYPEC,TYPED, HIRE_DATE , ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) MONTHS 
    			FROM EMPLOYEE E 
			    LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS VACATION_COUNT FROM VACATION WHERE DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
			    LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEA FROM VACATION WHERE VC_SQ = '경조사' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
			    LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEB FROM VACATION WHERE VC_SQ = '병가' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID) 
			    LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPEC FROM VACATION WHERE VC_SQ = '출산' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
			    LEFT JOIN (SELECT EMP_ID, SUM(VC_COUNT) AS TYPED FROM VACATION WHERE VC_SQ = '연차' and DOC_STATUS=2 GROUP BY EMP_ID) L ON (E.EMP_ID= L.EMP_ID)
			    <if test="empName != null">
					WHERE EMP_NAME LIKE '%'||#{empName}||'%'
				</if>
				<if test="vacationYear != null">
					WHERE vacationYear LIKE '%'||#{vacationYear}||'%'
				</if>
			    ORDER BY EMP_ID)
	</select>
	
	
	<update id="updateLogo" parameterType="MgInfo">
		UPDATE COMPANY_INFO
		   SET LOGO_CHANGE_NAME = #{logoChange},
		       LOGO_ORIGIN_NAME = #{logoOrigin}
		 WHERE HOM_NO=#{homNo}
	</update>
	
	<update id="updateSeal" parameterType="MgBsns">
		UPDATE COMPANY_BSNS
		   SET SEAL_CHANGE_NAME = #{sealChange},
		       SEAL_ORIGIN_NAME = #{sealOrigin}
		 WHERE COMPANY_NO = #{companyNo}
	</update>
	
	<update id="updateStatus">
		UPDATE EMPLOYEE
		   SET EMP_STATUS = 'N'
		 WHERE EMP_ID = #{empId}
	</update>

	<update id="updateCompanyBsns" parameterType="MgBsns">
		UPDATE COMPANY_BSNS 
		   SET COMPANY_NO=#{companyNo}, COMPANY_EXNO=#{companyExno}, COMPANY_NAME=#{companyName}, COMPANY_HEAD=#{companyHead},
		   	   COMPANY_CON=#{companyCon}, COMPANY_KIND=#{companyKind}, COMPANY_ADRS=#{companyAdrs}
		 WHERE HOM_NO=#{homNo}  	
	</update>
	<select id="selectProofListCount" resultType="_int">
		select count(*)
 		  from proof p  
		  join employee e on(p.emp_id=e.emp_id)
		 where doc_status=2
	</select>
	
	<select id="selectProofList" resultMap="empProofResultSet">
		select doc_no, p.emp_id, e.emp_name, doc_status, doc_date, doc_department, pf_status, pf_sq, pf_purpose 
 		  from proof p  
		  join employee e on(p.emp_id=e.emp_id)
		 where doc_status=2
	</select>
	
	<select id="selectProof"  parameterType="string" resultMap="empProofResultSet">
		select doc_no, p.emp_id, e.emp_name, doc_status, doc_date, doc_department, pf_status, pf_sq, pf_purpose 
 		  from proof p  
		  join employee e on(p.emp_id=e.emp_id)
		 where doc_status=2 and doc_no = #{docNo}
	</select>
	<update id="updatePfStatus" parameterType="string">
		update proof
		   set pf_status='Y'
		 where doc_no=#{docNo}
	</update>
	
	<update id="saveRank" parameterType="MgJob">
		UPDATE JOB
		   SET JOB_NAME=#{jobName}
		 WHERE JOB_CODE=#{jobCode}
	</update>
	
	<insert id="insertJobCode" parameterType="string">
		INSERT INTO JOB
		VALUES(SEQ_JOBNO.NEXTVAL, #{jobName})
	</insert>
	
	<update id="updateJobCode" parameterType="MgJob">
		UPDATE JOB
		   SET JOB_NAME=#{jobName}
		 WHERE JOB_CODE=#{jobCode}
	</update>
	
	<delete id="deleteJobCode" parameterType="_int">
		DELETE FROM JOB
		 WHERE JOB_CODE=#{jobCode}
	</delete>

</mapper>
