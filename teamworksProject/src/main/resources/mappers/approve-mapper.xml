<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approveMapper">

	<resultMap id="empInfoResultSet" type="Employee">
		<id column="emp_id" property="empId"/>
		<result column="emp_name" property="empName"/>
		<result column="dept_code" property="deptCode" />
		<result column="dept_name" property="deptName" />
		<result column="job_code" property="jobCode" />
		<result column="job_name" property="jobName" />
	</resultMap>
	
	
	<resultMap id="reqApprovalResultSet" type="Document">
		<id column="doc_no" property="docNo"/>
		<result column="emp_id" property="empId"/>
		<result column="doc_sc" property="docSc"/>
		<result column="doc_status" property="docStatus"/>
		<result column="doc_title" property="docTitle"/>
		<result column="doc_reference" property="docReference"/>
		<result column="doc_refname" property="docRefName"/>
		<result column="doc_date" property="docDate"/>
		<result column="doc_end" property="docEnd"/>
		<result column="doc_department" property="docDepartment"/>
		
		<result column="fe_sq" property="feSq"/>
		<result column="fe_relation" property="feRelation"/>
		<result column="fe_name" property="feName"/>
		<result column="fe_start" property="feStart"/>
		<result column="fe_end" property="feEnd"/>
		<result column="fe_place" property="fePlace"/>
		<result column="fe_price" property="fePrice"/>
		<result column="fe_bank" property="feBank"/>
		<result column="fe_account" property="feAccount"/>
		<result column="fe_account_name" property="feAccountName"/>
		
		<result column="vc_sq" property="vcSq"/>
		<result column="vc_day" property="vcDay"/>
		<result column="vc_start" property="vcStart"/>
		<result column="vc_end" property="vcEnd"/>
		<result column="vc_count" property="vcCount"/>
		<result column="vc_content" property="vcContent"/>
		
		<result column="doc_content" property="docContent"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		
		<result column="pf_sq" property="pfSq"/>
		<result column="pf_purpose" property="pfPurpose"/>
		<result column="pf_status" property="pfStatus"/>
		
		<result column="approve_status" property="approveStatus"/>
		<result column="emp_name" property="empName"/>
		
		<result column="approver_empid" property="approverEmpid"/>
		<result column="approver_name" property="approverName"/>
		<result column="job_name" property="jobName" />
		<result column="dept_name" property="deptName" />
		<result column="approve_step" property="approveStep"/>
		<result column="approve_reject" property="approveReject"/>
		<result column="approve_status" property="approveStatus"/>
		<result column="approve_comment" property="approveComment"/>
		<result column="approve_date" property="approveDate"/>
		
	</resultMap>
	
	<resultMap id="freLineResultSet" type="fal">
		<result column="line_name" property="lineName"/>
		<result column="emp_id" property="empId"/>
		<result column="authorized_empid" property="authorizedEmpid"/>
		<result column="emp_name" property="empName"/>
		<result column="job_name" property="jobName"/>
		<result column="dept_name" property="deptName"/>
		<result column="approve_step" property="approveStep"/>
	</resultMap>
	



	<select id="selectEmpInfo" parameterType="string" resultMap="empInfoResultSet">
		select emp_id, emp_name, dept_name
		  from employee
		  join department using(dept_code)
		 where emp_id = #{empId} and emp_status = 'Y'
	</select>

	<select id="selectDeptName" resultMap="empInfoResultSet">
		select dept_code, dept_name
		  from department
		 order by dept_code
	</select>


	<select id="selectOrgChart" resultMap="empInfoResultSet">
		select emp_id, emp_name, e.dept_code, dept_name, e.job_code, job_name
		  from employee e
		  join department d on(e.dept_code = d.dept_code)
		  join job j on(e.job_code = j.job_code)
		 where emp_status = 'Y'
         order by e.dept_code, e.job_code
	</select>

	<select id="selectEmpSch" parameterType="asc" resultMap="empInfoResultSet">
		select emp_id, emp_name, e.dept_code, dept_name, e.job_code, job_name
		  from employee e
		  join department d on(e.dept_code = d.dept_code)
		  join job j on(e.job_code = j.job_code)
		 where emp_status = 'Y'
		 	<choose>
		 		<when test="deptName != null">
		 					and dept_name like '%' || #{deptName} || '%'
		 			order by job_code
		 		</when>	
		 		<when test="jobName != null">
		 					and job_name like '%' || #{jobName} || '%'
		 			order by dept_code
		 		</when>
		 		<when test="empName != null">
		 					and emp_name like '%' || #{empName} || '%'
		 			order by dept_code, job_code
		 		</when>
		 	</choose>
	</select>



	<insert id="insertFamilyEvent" parameterType="Document">
		insert into FAMILY_EVENT
		values(#{docNo}, #{empId}, #{docSc}, 0, #{docTitle}, #{docReference}, #{docRefName}, #{docDate}, #{docEnd}, #{docDepartment}, #{feSq}, #{feRelation}, #{feName}, #{feStart}, #{feEnd}, #{fePlace}, #{fePrice}, #{feBank}, #{feAccount}, #{feAccountName})
	</insert>
	
	<insert id="insertVacation" parameterType="Document">
		insert into vacation
		values(#{docNo}, #{empId}, #{docSc}, 0, #{docTitle}, #{docReference}, #{docRefName}, #{docDate}, #{docEnd}, #{docDepartment}, #{vcSq}, #{vcDay}, #{vcStart}, #{vcEnd}, #{vcCount}, #{vcContent})
	</insert>
	
	<insert id="insertApproveLine" parameterType="al">
		insert into approve_line
		values(#{approverEmpid}, #{docNo}, #{approveStep}, #{approveReject}, #{approveStatus}, null, null)
	</insert>
	
	
	
	
	<select id="selectLineName" parameterType="fal" resultType="_int">
		select count(*)
		  from frequent_approval_line
		 where emp_id = #{empId} and line_name = #{lineName}
	</select>
	
	<insert id="insertFreLine" parameterType="fal">
		insert into frequent_approval_line
		values(#{lineName}, #{empId}, #{authorizedEmpid}, #{approveStep})
	</insert>
	
	<select id="selectFreLine" parameterType="String" resultMap="freLineResultSet">
		select line_name
		  from frequent_approval_line
		 where emp_id = #{empId}
		 group by line_name
		 order by line_name
	</select>

	<select id="selectLineDetail" parameterType="fal" resultMap="freLineResultSet">
		select f.line_name, f.emp_id, f.authorized_empid, e.emp_name, j.job_name, d.dept_name, f.approve_step
		  from frequent_approval_line f
		  join employee e on(f.authorized_empid = e.emp_id)
		  join department d on(e.dept_code = d.dept_code)
		  join job j on(e.job_code = j.job_code)
		 where f.emp_id = #{empId} and f.line_name = #{lineName}
		 order by f.approve_step
	</select>

	<delete id="deleteLine" parameterType="fal">
		delete from frequent_approval_line
		 where emp_id = #{empId} and line_name = #{lineName}
	</delete>



	<select id="selectListCount" parameterType="Document" resultType="_int">
		select count(*)
		  from (select v.doc_no
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
        		 where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
      			 UNION ALL
      			select f.doc_no
        		  from family_event f
        		  join approve_line a on(f.doc_no = a.doc_no)
        		 where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
        		 UNION ALL
		        select p.doc_no
		          from proof p
		          join approve_line a on(p.doc_no = a.doc_no)
		         where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
		         UNION ALL
		        select d.doc_no
		          from draft d
		          join approve_line a on(d.doc_no = a.doc_no)
		         where a.approver_empid=#{empId} and a.approve_status=#{approveStatus})
	</select>
	
	<select id="selectDocList" parameterType="Document" resultMap="reqApprovalResultSet">
		select *
		  from (select *
      			  from (select v.doc_no, v.doc_sc, v.doc_title, v.emp_id, e.emp_name, v.doc_department, v.doc_date, a.approve_status
            			  from vacation v
            			  join approve_line a on(v.doc_no = a.doc_no)
            			  join employee e on(v.emp_id = e.emp_id)
           				 where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
           				 order by v.doc_date desc)
				UNION ALL
				select *
		  		  from (select f.doc_no, f.doc_sc, f.doc_title, f.emp_id, e.emp_name, f.doc_department, f.doc_date, a.approve_status
              	  		  from family_event f
              	  		  join approve_line a on(f.doc_no = a.doc_no)
              	  		  join employee e on(f.emp_id = e.emp_id)
            	 		 where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
              	 		 order by f.doc_date desc)
               UNION ALL
      		  select *
        		from (select d.doc_no, d.doc_sc, d.doc_title, d.emp_id, e.emp_name, d.doc_department, d.doc_date, a.approve_status
                		from draft d
                		join approve_line a on(d.doc_no = a.doc_no)
                		join employee e on(d.emp_id = e.emp_id)
              		   where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
               		   order by d.doc_date desc)
        	   UNION ALL
      		  select *
        		from (select p.doc_no, p.doc_sc, p.doc_title, p.emp_id, e.emp_name, p.doc_department, p.doc_date, a.approve_status
                		from proof p
                		join approve_line a on(p.doc_no = a.doc_no)
                		join employee e on(p.emp_id = e.emp_id)
               		   where a.approver_empid=#{empId} and a.approve_status=#{approveStatus}
               		   order by p.doc_date desc)
      		  )
		order by doc_date desc
	</select>
	
	<select id="searchListCount" parameterType="asc" resultType="_int">
		select count(*)
		  from (select v.doc_no, e.emp_name, v.doc_title, v.doc_sc, v.doc_date, a.approver_empid, a.approve_status
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
        		  join employee e on(v.emp_id = e.emp_id)
      			 UNION ALL
		      	select f.doc_no, e.emp_name, f.doc_title, f.doc_sc, f.doc_date, a.approver_empid, a.approve_status
		          from family_event f
		          join approve_line a on(f.doc_no = a.doc_no)
		          join employee e on(f.emp_id = e.emp_id)
		        UNION ALL
		       select p.doc_no, e.emp_name, p.doc_title, p.doc_sc, p.doc_date, a.approver_empid, a.approve_status
		         from proof p
		         join approve_line a on(p.doc_no = a.doc_no)
		         join employee e on(p.emp_id = e.emp_id)
		        UNION ALL
		       select d.doc_no, e.emp_name, d.doc_title, d.doc_sc, d.doc_date, a.approver_empid, a.approve_status
		         from draft d
		         join approve_line a on(d.doc_no = a.doc_no)
		         join employee e on(d.emp_id = e.emp_id))
		where approver_empid=#{empId} and approve_status=#{approveStatus}
			<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
	</select>
	
	<select id="searchDocList" parameterType="asc" resultMap="reqApprovalResultSet">
		select *
		  from (select *
      			  from (select v.doc_no, v.doc_sc, v.doc_title, v.emp_id, e.emp_name, v.doc_department, v.doc_date, a.approver_empid, a.approve_status
            			  from vacation v
            			  join approve_line a on(v.doc_no = a.doc_no)
            			  join employee e on(v.emp_id = e.emp_id)
           				 order by v.doc_date desc)
				UNION ALL
				select *
		  		  from (select f.doc_no, f.doc_sc, f.doc_title, f.emp_id, e.emp_name, f.doc_department, f.doc_date, a.approver_empid, a.approve_status
              	  		  from family_event f
              	  		  join approve_line a on(f.doc_no = a.doc_no)
              	  		  join employee e on(f.emp_id = e.emp_id)
              	 		 order by f.doc_date desc)
               UNION ALL
      		  select *
        		from (select d.doc_no, d.doc_sc, d.doc_title, d.emp_id, e.emp_name, d.doc_department, d.doc_date, a.approver_empid, a.approve_status
                		from draft d
                		join approve_line a on(d.doc_no = a.doc_no)
                		join employee e on(d.emp_id = e.emp_id)
               		   order by d.doc_date desc)
        	   UNION ALL
      		  select *
        		from (select p.doc_no, p.doc_sc, p.doc_title, p.emp_id, e.emp_name, p.doc_department, p.doc_date, a.approver_empid, a.approve_status
                		from proof p
                		join approve_line a on(p.doc_no = a.doc_no)
                		join employee e on(p.emp_id = e.emp_id)
               		   order by p.doc_date desc)
      		  )
      	where approver_empid=#{empId} and approve_status=#{approveStatus} 
			<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
		order by doc_date desc
	</select>
	
		
	<select id="selectApId" parameterType="Document" resultType="string">
		select approver_empid
		from approve_line
		where doc_no=#{docNo} and approve_reject='진행'
	</select>
	
	<select id="selectCbId" parameterType="Document" resultType="string">
		select approver_empid
		from approve_line
		where doc_no=#{docNo} and approve_status=4
	</select>
	
	<select id="selectComment" parameterType="Document" resultType="_int">
		select count(approve_comment)
		from approve_line
		where doc_no=#{docNo}
	</select>
	
	<select id="selectApStatus" parameterType="string" resultType="_int">
		select approve_status
		from approve_line
		where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</select>

	<select id="selectFeDetail" parameterType="Document" resultMap="reqApprovalResultSet">
		select f.doc_no, f.emp_id, e.emp_name, f.doc_sc, f.doc_status, f.doc_title, f.doc_refname, f.doc_date, f.doc_end, f.doc_department,
			   f.fe_sq, f.fe_relation, f.fe_name, f.fe_start, f.fe_end, f.fe_place, f.fe_price, f.fe_bank, f.fe_account, f.fe_account_name,
			   a.approver_empid, (select emp_name
	                    			from employee
	                   			   where emp_id = a.approver_empid) approver_name, (select job_name
                                                                       				  from job j
                                                                       				  join employee e on(e.job_code = j.job_code)
                                                                      				 where e.emp_id = a.approver_empid) job_name, (select d.dept_name
                                                                                                                    				 from department d
                                                                                                                   					 join employee e on(e.dept_code = d.dept_code)
                                                                                                                    				where e.emp_id = a.approver_empid) dept_name,
	           a.approve_step, a.approve_reject, a.approve_status, a.approve_comment, a.approve_date
		 from family_event f
		 join employee e on(f.emp_id = e.emp_id)
		 join approve_line a on(f.doc_no = a.doc_no)
	    where f.doc_no=#{docNo}
	    order by a.approve_step
	</select>
	
	<select id="selectVacDetail" parameterType="Document" resultMap="reqApprovalResultSet">
		select v.doc_no, v.emp_id, e.emp_name, v.doc_sc, v.doc_status, v.doc_title, v.doc_reference, v.doc_refname, v.doc_date, v.doc_end, v.doc_department,
				v.vc_sq, vc_day, vc_start, vc_end, vc_count, vc_content,
				a.approver_empid, (select emp_name
				                    from employee
				                    where emp_id = a.approver_empid) approver_name, (select job_name
                                                                       				  from job j
                                                                       				  join employee e on(e.job_code = j.job_code)
                                                                      				 where e.emp_id = a.approver_empid) job_name, (select d.dept_name
                                                                                                                    				 from department d
                                                                                                                   					 join employee e on(e.dept_code = d.dept_code)
                                                                                                                    				where e.emp_id = a.approver_empid) dept_name,
				a.approve_step, a.approve_reject, a.approve_status, a.approve_comment, a.approve_date				
		 from vacation v
		 join employee e on(v.emp_id = e.emp_id)
		 join approve_line a on(v.doc_no = a.doc_no)
		where v.doc_no=#{docNo}
		order by a.approve_step
	</select>
	
	<select id="selectDraftDetail" parameterType="Document" resultMap="reqApprovalResultSet">
		select dr.doc_no, dr.emp_id, e.emp_name, dr.doc_sc, dr.doc_status, dr.doc_title, dr.doc_reference, dr.doc_refname, dr.doc_date, dr.doc_end, dr.doc_department,
				dr.doc_content, dr.origin_name, dr.change_name,
				a.approver_empid, (select emp_name
				                    from employee
				                    where emp_id = a.approver_empid) approver_name, (select job_name
                                                                       				  from job j
                                                                       				  join employee e on(e.job_code = j.job_code)
                                                                      				 where e.emp_id = a.approver_empid) job_name, (select d.dept_name
                                                                                                                    				 from department d
                                                                                                                   					 join employee e on(e.dept_code = d.dept_code)
                                                                                                                    				where e.emp_id = a.approver_empid) dept_name,
				a.approve_step, a.approve_reject, a.approve_status, a.approve_comment, a.approve_date				
		 from draft dr
		 join employee e on(dr.emp_id = e.emp_id)
		 join approve_line a on(dr.doc_no = a.doc_no)
		where dr.doc_no=#{docNo}
		order by a.approve_step
	</select>
	
	<select id="selectProofDetail" parameterType="Document" resultMap="reqApprovalResultSet">
		select p.doc_no, p.emp_id, e.emp_name, p.doc_sc, p.doc_status, p.doc_title, p.doc_reference, p.doc_refname, p.doc_date, p.doc_end, p.doc_department,
				p.pf_sq, p.pf_purpose, p.pf_status,
				a.approver_empid, (select emp_name
				                    from employee
				                    where emp_id = a.approver_empid) approver_name, (select job_name
                                                                       				  from job j
                                                                       				  join employee e on(e.job_code = j.job_code)
                                                                      				 where e.emp_id = a.approver_empid) job_name, (select d.dept_name
                                                                                                                    				 from department d
                                                                                                                   					 join employee e on(e.dept_code = d.dept_code)
                                                                                                                    				where e.emp_id = a.approver_empid) dept_name,
				a.approve_step, a.approve_reject, a.approve_status, a.approve_comment, a.approve_date				
		 from proof p
		 join employee e on(p.emp_id = e.emp_id)
		 join approve_line a on(p.doc_no = a.doc_no)
		where p.doc_no=#{docNo}
		order by a.approve_step
	</select>
	
	
	
	<select id="selectApList" parameterType="Document" resultMap="reqApprovalResultSet">
		select approver_empid, approve_step, approve_reject, approve_status
		  from approve_line
		 where doc_no=#{docNo} and approve_reject in('미결', '진행')
		 order by approve_step
	</select>
	
	<update id="updateApprove" parameterType="Document">
		update approve_line
		   set approve_reject=#{approveReject},
		       approve_status=1,
		       approve_comment=#{approveComment},
    		   approve_date=to_char(sysdate, 'yyyy-mm-dd')
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<update id="updateDocStatus" parameterType="Document">
		<if test="docSc == '경조비신청서'">
			update family_event
		</if>
		<if test="docSc == '제증명신청서'">
			update proof
		</if>
		<if test="docSc == '휴가신청서'">
			update vacation
		</if>
		<if test="docSc == '기안서'">
			update draft
		</if>
			   set doc_status=1
			 where emp_id=#{empId} and doc_no=#{docNo}
	</update>
	
	<update id="updateLine" parameterType="Document">
		update approve_line
		   set approve_reject='진행'
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<update id="updateComplete" parameterType="Document">
		update approve_line
		   set approve_reject=#{approveReject},
			   approve_status=2,
			   approve_comment=#{approveComment},
    		   approve_date=to_char(sysdate, 'yyyy-mm-dd')
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<select id="selectAllList" parameterType="Document" resultMap="reqApprovalResultSet">
		select doc_no, approver_empid, approve_step, approve_reject, approve_status
		  from approve_line
		 where doc_no=#{docNo}
		 order by approve_step
	</select>
	
	<update id="updateAllComplete" parameterType="Document">
		update approve_line
		   set approve_status=2
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<update id="updateDs" parameterType="Document">
		<if test="docSc == '경조비신청서'">
			update family_event
		</if>
		<if test="docSc == '제증명신청서'">
			update proof
		</if>
		<if test="docSc == '휴가신청서'">
			update vacation
		</if>
		<if test="docSc == '기안서'">
			update draft
		</if>
			   set doc_status=2
			 where emp_id=#{empId} and doc_no=#{docNo}
	</update>
	
	<update id="updateReject"  parameterType="Document">
		update approve_line
		   set approve_reject=#{approveReject},
		       approve_status=3,
		       approve_comment=#{approveComment},
		       approve_date=to_char(sysdate, 'yyyy-mm-dd')
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<update id="updateAllReject" parameterType="Document">
		update approve_line
		   set approve_status=3
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<update id="updateDsReject" parameterType="Document">
		<if test="docSc == '경조비신청서'">
			update family_event
		</if>
		<if test="docSc == '제증명신청서'">
			update proof
		</if>
		<if test="docSc == '휴가신청서'">
			update vacation
		</if>
		<if test="docSc == '기안서'">
			update draft
		</if>
			   set doc_status=3
			 where emp_id=#{empId} and doc_no=#{docNo}
	</update>
	
	
	
	<select id="selectRefCount" parameterType="Document" resultType="_int">
		select count(*)
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_reference, d.doc_date, d.doc_status
		  		  from draft d
		 		  join employee e on(d.emp_id = e.emp_id)
		 		 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_reference, p.doc_date, p.doc_status
		 		  from proof p
		 		  join employee e on(p.emp_id = e.emp_id)
		 		 UNION ALL
		 		select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_reference, v.doc_date, v.doc_status
		  		  from vacation v
		 		  join employee e on(v.emp_id = e.emp_id)
		 		 UNION ALL
		 		select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_reference, f.doc_date, f.doc_status
		  		  from family_event f
		 		  join employee e on(f.emp_id = e.emp_id)
 		 )
 		 where DOC_REFERENCE like '%'||#{empId}||'%'
	</select>
	
	<select id="selectRefList" parameterType="Document" resultMap="reqApprovalResultSet">
		select *
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_reference, d.doc_date, d.doc_status
		  		  from draft d
		 		  join employee e on(d.emp_id = e.emp_id)
		 		 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_reference, p.doc_date, p.doc_status
		 		  from proof p
		 		  join employee e on(p.emp_id = e.emp_id)
		 		 UNION ALL
		 		select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_reference, v.doc_date, v.doc_status
		  		  from vacation v
		 		  join employee e on(v.emp_id = e.emp_id)
		 		 UNION ALL
		 		select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_reference, f.doc_date, f.doc_status
		  		  from family_event f
		 		  join employee e on(f.emp_id = e.emp_id)
 		 )
 		 where DOC_REFERENCE like '%'||#{empId}||'%'
 		 order by doc_date desc
	</select>
	
	
	<select id="searchRefCount" parameterType="asc" resultType="_int">
		select count(*)
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_reference, d.doc_date, d.doc_status
		  		  from draft d
		 		  join employee e on(d.emp_id = e.emp_id)
		 		 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_reference, p.doc_date, p.doc_status
		 		  from proof p
		 		  join employee e on(p.emp_id = e.emp_id)
		 		 UNION ALL
		 		select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_reference, v.doc_date, v.doc_status
		  		  from vacation v
		 		  join employee e on(v.emp_id = e.emp_id)
		 		 UNION ALL
		 		select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_reference, f.doc_date, f.doc_status
		  		  from family_event f
		 		  join employee e on(f.emp_id = e.emp_id)
 		 )
 		 where DOC_REFERENCE like '%'||#{empId}||'%' 
 		 	<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
			<if test="stand != null">
				and doc_status = 0
			</if>
			<if test="pending != null">
				and doc_status = 1
			</if>
			<if test="complete != null">
				and doc_status = 2
			</if>
			<if test="refuse != null">
				and doc_status = 3
			</if>
	</select>
	
	<select id="searchRefList" parameterType="asc" resultMap="reqApprovalResultSet">
		select *
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_reference, d.doc_date, d.doc_status
		  		  from draft d
		 		  join employee e on(d.emp_id = e.emp_id)
		 		 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_reference, p.doc_date, p.doc_status
		 		  from proof p
		 		  join employee e on(p.emp_id = e.emp_id)
		 		 UNION ALL
		 		select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_reference, v.doc_date, v.doc_status
		  		  from vacation v
		 		  join employee e on(v.emp_id = e.emp_id)
		 		 UNION ALL
		 		select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_reference, f.doc_date, f.doc_status
		  		  from family_event f
		 		  join employee e on(f.emp_id = e.emp_id)
 		 )
 		 where DOC_REFERENCE like '%'||#{empId}||'%' 
 		 	<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
			<if test="stand != null">
				and doc_status = 0
			</if>
			<if test="pending != null">
				and doc_status = 1
			</if>
			<if test="complete != null">
				and doc_status = 2
			</if>
			<if test="refuse != null">
				and doc_status = 3
			</if>
 		 order by doc_date desc
	</select>
	
	
	
	
	<select id="selectMyDocCount" parameterType="Document" resultType="_int">
		select count(*)
		  from (select d.doc_no, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 where d.emp_id=#{empId}
				 UNION ALL
				select p.doc_no, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 where p.emp_id=#{empId}
				 UNION ALL
				select v.doc_no, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 where v.emp_id=#{empId}
				 UNION ALL
				select f.doc_no, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id)
		 		 where f.emp_id=#{empId})
	</select>
	
	<select id="selectMyDocList" parameterType="Document" resultMap="reqApprovalResultSet">
		select *
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId}
		order by doc_date desc
	</select>
	
	<select id="searchMyDocCount" parameterType="asc" resultType="_int">
		select count(*)
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId}
			<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
			<if test="stand != null">
				and doc_status = 0
			</if>
			<if test="pending != null">
				and doc_status = 1
			</if>
			<if test="complete != null">
				and doc_status = 2
			</if>
			<if test="refuse != null">
				and doc_status = 3
			</if>
	</select>
	
	<select id="searchMyDocList" parameterType="asc" resultMap="reqApprovalResultSet">
		select *
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId}
			<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
			<if test="stand != null">
				and doc_status = 0
			</if>
			<if test="pending != null">
				and doc_status = 1
			</if>
			<if test="complete != null">
				and doc_status = 2
			</if>
			<if test="refuse != null">
				and doc_status = 3
			</if>
		order by doc_date desc
	</select>
	
	
	
	<select id="countStand" parameterType="Document" resultType="_int">
		select count(*)
		  from (select v.doc_no, a.approver_empid, a.approve_status
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
      			 UNION ALL
      			select f.doc_no, a.approver_empid, a.approve_status
        		  from family_event f
        		  join approve_line a on(f.doc_no = a.doc_no)
        		 UNION ALL
		        select p.doc_no, a.approver_empid, a.approve_status
		          from proof p
		          join approve_line a on(p.doc_no = a.doc_no)
		         UNION ALL
		        select d.doc_no, a.approver_empid, a.approve_status
		          from draft d
		          join approve_line a on(d.doc_no = a.doc_no))
		where approver_empid=#{empId} and approve_status=0
	</select>
	
	<select id="countPending" parameterType="Document" resultType="_int">
		select count(*)
		  from (select v.doc_no, a.approver_empid, a.approve_status
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
      			 UNION ALL
      			select f.doc_no, a.approver_empid, a.approve_status
        		  from family_event f
        		  join approve_line a on(f.doc_no = a.doc_no)
        		 UNION ALL
		        select p.doc_no, a.approver_empid, a.approve_status
		          from proof p
		          join approve_line a on(p.doc_no = a.doc_no)
		         UNION ALL
		        select d.doc_no, a.approver_empid, a.approve_status
		          from draft d
		          join approve_line a on(d.doc_no = a.doc_no))
		where approver_empid=#{empId} and approve_status=1
	</select>

	<select id="countComplete" parameterType="Document" resultType="_int">
		select count(*)
		  from (select v.doc_no, a.approver_empid, a.approve_status
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
      			 UNION ALL
      			select f.doc_no, a.approver_empid, a.approve_status
        		  from family_event f
        		  join approve_line a on(f.doc_no = a.doc_no)
        		 UNION ALL
		        select p.doc_no, a.approver_empid, a.approve_status
		          from proof p
		          join approve_line a on(p.doc_no = a.doc_no)
		         UNION ALL
		        select d.doc_no, a.approver_empid, a.approve_status
		          from draft d
		          join approve_line a on(d.doc_no = a.doc_no))
		where approver_empid=#{empId} and approve_status=2
	</select>
	
	<select id="countRefuse" parameterType="Document" resultType="_int">
		select count(*)
		  from (select v.doc_no, a.approver_empid, a.approve_status
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
      			 UNION ALL
      			select f.doc_no, a.approver_empid, a.approve_status
        		  from family_event f
        		  join approve_line a on(f.doc_no = a.doc_no)
        		 UNION ALL
		        select p.doc_no, a.approver_empid, a.approve_status
		          from proof p
		          join approve_line a on(p.doc_no = a.doc_no)
		         UNION ALL
		        select d.doc_no, a.approver_empid, a.approve_status
		          from draft d
		          join approve_line a on(d.doc_no = a.doc_no))
		where approver_empid=#{empId} and approve_status=3
	</select>
	
	<select id="countCallback" parameterType="Document" resultType="_int">
		select count(*)
		  from (select v.doc_no, a.approver_empid, a.approve_status
        		  from vacation v
        		  join approve_line a on(v.doc_no = a.doc_no)
      			 UNION ALL
      			select f.doc_no, a.approver_empid, a.approve_status
        		  from family_event f
        		  join approve_line a on(f.doc_no = a.doc_no)
        		 UNION ALL
		        select p.doc_no, a.approver_empid, a.approve_status
		          from proof p
		          join approve_line a on(p.doc_no = a.doc_no)
		         UNION ALL
		        select d.doc_no, a.approver_empid, a.approve_status
		          from draft d
		          join approve_line a on(d.doc_no = a.doc_no))
		where approver_empid=#{empId} and approve_status=4
	</select>
	


	<update id="requestCallback" parameterType="Document">
		update approve_line
		   set approve_status=4,
		   	   approve_reject='회수요청'
		 where doc_no=#{docNo} and approve_step=0
	</update>
	
	<update id="updateDocSt" parameterType="Document">
		<if test="docSc == '경조비신청서'">
			update family_event
		</if>
		<if test="docSc == '제증명신청서'">
			update proof
		</if>
		<if test="docSc == '휴가신청서'">
			update vacation
		</if>
		<if test="docSc == '기안서'">
			update draft
		</if>
			   set doc_status=4
			 where doc_no=#{docNo}
	</update>
	
	
	
	
	<update id="permitCallback" parameterType="Document">
		update approve_line
		   set approve_reject=#{approveReject},
		       approve_status=5,
		       approve_comment=#{approveComment},
    		   approve_date=to_char(sysdate, 'yyyy-mm-dd')
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	<update id="statusCallback" parameterType="Document">
		<if test="docSc == '경조비신청서'">
			update family_event
		</if>
		<if test="docSc == '제증명신청서'">
			update proof
		</if>
		<if test="docSc == '휴가신청서'">
			update vacation
		</if>
		<if test="docSc == '기안서'">
			update draft
		</if>
			   set doc_status=5
			 where doc_no=#{docNo}
	</update>
	
	<update id="refuseCallback" parameterType="Document">
		update approve_line
		   set approve_reject=#{approveReject},
		       approve_status=6,
		       approve_comment=#{approveComment},
    		   approve_date=to_char(sysdate, 'yyyy-mm-dd')
		 where doc_no=#{docNo} and approver_empid=#{approverEmpid}
	</update>
	
	
	
	
	<select id="selectCallbackCount" parameterType="Document" resultType="_int">
		select count(*)
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId} and doc_status=5
	</select>
	
	<select id="selectCallbackList" parameterType="Document" resultMap="reqApprovalResultSet">
		select *
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId} and doc_status=5
	</select>
	
	<select id="searchCallbackCount" parameterType="asc" resultType="_int">
		select count(*)
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId} and doc_status=5
			<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
	</select>
	
	<select id="searchCallbackList" parameterType="asc" resultMap="reqApprovalResultSet">
		select *
		  from (select d.doc_no, d.emp_id, d.doc_sc, d.doc_title, e.emp_name, d.doc_department, d.doc_date, d.doc_status
				  from draft d
				  join employee e on(d.emp_id = e.emp_id)
				 UNION ALL
				select p.doc_no, p.emp_id, p.doc_sc, p.doc_title, e.emp_name, p.doc_department, p.doc_date, p.doc_status
				  from proof p
				  join employee e on(p.emp_id = e.emp_id)
				 UNION ALL
				select v.doc_no, v.emp_id, v.doc_sc, v.doc_title, e.emp_name, v.doc_department, v.doc_date, v.doc_status
				  from vacation v
				  join employee e on(v.emp_id = e.emp_id)
				 UNION ALL
				select f.doc_no, f.emp_id, f.doc_sc, f.doc_title, e.emp_name, f.doc_department, f.doc_date, f.doc_status
				  from family_event f
				  join employee e on(f.emp_id = e.emp_id))
		where emp_id=#{empId} and doc_status=5
			<if test="writer != null">
				and emp_name like '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				and doc_title like '%' || #{title} || '%'
			</if>
			<if test="form != null">
				and doc_sc like '%' || #{form} || '%'
			</if>
			<if test="startDate != '' and endDate != ''">
				and doc_date between #{startDate} and #{endDate}
			</if>
		order by doc_date desc
	</select>
	

	
</mapper>
